---
const baseUrl = import.meta.env.BASE_URL;
const navItems = [
  { href: `${baseUrl}`, label: 'Accueil' },
  { href: `${baseUrl}a-propos`, label: 'À Propos' },
  { href: `${baseUrl}competences`, label: 'Compétences' },
  { href: `${baseUrl}honoraires`, label: 'Honoraires' },
  { href: `${baseUrl}contact`, label: 'Contact' },
];

const currentPath = Astro.url.pathname;
---

<nav class="w-full md:w-auto">
  <!-- Mobile Menu Button -->
  <button
    id="mobile-menu-button"
    class="md:hidden flex items-center justify-center w-10 h-10 text-gold-400 hover:text-gold-300 transition-colors"
    aria-label="Toggle menu"
    aria-expanded="false"
  >
    <svg id="menu-icon" class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
    </svg>
    <svg id="close-icon" class="w-6 h-6 hidden" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
    </svg>
  </button>

  <!-- Navigation Menu -->
  <ul id="mobile-menu" class="hidden md:flex flex-col md:flex-row md:space-x-8 space-y-2 md:space-y-0 items-center mt-4 md:mt-0">
    {navItems.map((item) => {
      const isActive = currentPath === item.href;
      const linkClass = isActive
        ? 'text-gold-400 border-b-2 border-gold-400'
        : 'text-slate-100 hover:text-gold-400';

      return (
        <li>
          <a
            href={item.href}
            class={`${linkClass} transition-colors font-medium block py-2`}
          >
            {item.label}
          </a>
        </li>
      );
    })}
  </ul>
</nav>

<script is:inline>
  function setupMobileMenu() {
    const mobileMenuButton = document.getElementById('mobile-menu-button');
    const mobileMenu = document.getElementById('mobile-menu');
    const menuIcon = document.getElementById('menu-icon');
    const closeIcon = document.getElementById('close-icon');

    if (!mobileMenuButton) return;

    mobileMenuButton.addEventListener('click', () => {
      const isExpanded = mobileMenuButton.getAttribute('aria-expanded') === 'true';

      mobileMenuButton.setAttribute('aria-expanded', (!isExpanded).toString());
      mobileMenu?.classList.toggle('hidden');
      menuIcon?.classList.toggle('hidden');
      closeIcon?.classList.toggle('hidden');
    });
  }

  // Run on initial load
  setupMobileMenu();

  // Run after Astro page transitions
  document.addEventListener('astro:page-load', setupMobileMenu);
</script>
